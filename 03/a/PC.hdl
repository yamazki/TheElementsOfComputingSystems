// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // reset = 1  , out = 0
    // load =  1  , out = in(t-1)
    // inc  =  1  , out = out(t-1) + 1
    // Put your code here:

    // レジスタに打ち込む値を遅らせる
    DFF(in=load, out=loadbefore);
    DFF(in=inc, out=incbefore);
    DFF(in=reset, out=resetbefore);    

    Add16(a=loop, b[0]=inc,b[1..14]=false, out=incout);
    Register(in=incout, load=inc, out=addout); 
    Register(in=in, load=load, out=loadout);
    // inc load
    // 00       load
    // 01       load
    // 10       cnt
    // 11       load
    Mux4Way16(a=loadout, b=loadout, c=addout, d=loadout, sel[0]=loadbefore, sel[1]=incbefore, out=tmpout);
    Mux16(a=tmpout, b=false, sel=resetbefore, out=out, out=loop);   



}
